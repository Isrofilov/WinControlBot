//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinControlBot.Resources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WinControlBot.Resources.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Autostart: Disabled.
        /// </summary>
        public static string AutoStart_Disabled {
            get {
                return ResourceManager.GetString("AutoStart_Disabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Autostart: Enabled.
        /// </summary>
        public static string AutoStart_Enabled {
            get {
                return ResourceManager.GetString("AutoStart_Enabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Toggle application autostart.
        /// </summary>
        public static string AutoStart_Tooltip {
            get {
                return ResourceManager.GetString("AutoStart_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ✅ All screenshots sent ({0} monitors).
        /// </summary>
        public static string Bot_AllScreenshotsSent {
            get {
                return ResourceManager.GetString("Bot_AllScreenshotsSent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ❌ Command error: {0}.
        /// </summary>
        public static string Bot_CommandError {
            get {
                return ResourceManager.GetString("Bot_CommandError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ❌ Error details: {0}.
        /// </summary>
        public static string Bot_CommandErrorDetails {
            get {
                return ResourceManager.GetString("Bot_CommandErrorDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ✅ System command executed: {0}.
        /// </summary>
        public static string Bot_CommandExecuted {
            get {
                return ResourceManager.GetString("Bot_CommandExecuted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ❌ Command execution error: {0}.
        /// </summary>
        public static string Bot_CommandExecutionError {
            get {
                return ResourceManager.GetString("Bot_CommandExecutionError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ❌ Command finished with error code: {0}.
        /// </summary>
        public static string Bot_CommandExitCode {
            get {
                return ResourceManager.GetString("Bot_CommandExitCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ❌ Command was forcefully terminated due to timeout.
        /// </summary>
        public static string Bot_CommandKilled {
            get {
                return ResourceManager.GetString("Bot_CommandKilled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 📜 Command output: {0}.
        /// </summary>
        public static string Bot_CommandOutput {
            get {
                return ResourceManager.GetString("Bot_CommandOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⚠️ Conflict: bot is already running elsewhere.
        /// </summary>
        public static string Bot_Conflict {
            get {
                return ResourceManager.GetString("Bot_Conflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ❌ Critical error: {0}.
        /// </summary>
        public static string Bot_CriticalError {
            get {
                return ResourceManager.GetString("Bot_CriticalError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ❌ Error during disposal: {0}.
        /// </summary>
        public static string Bot_DisposeError {
            get {
                return ResourceManager.GetString("Bot_DisposeError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⚙️ Executing command: {0}.
        /// </summary>
        public static string Bot_ExecutingCommand {
            get {
                return ResourceManager.GetString("Bot_ExecutingCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ❌ Invalid bot token.
        /// </summary>
        public static string Bot_InvalidToken {
            get {
                return ResourceManager.GetString("Bot_InvalidToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 📩 Message from {0}: {1}.
        /// </summary>
        public static string Bot_MessageReceived {
            get {
                return ResourceManager.GetString("Bot_MessageReceived", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ❌ Polling error: {0}.
        /// </summary>
        public static string Bot_PollError {
            get {
                return ResourceManager.GetString("Bot_PollError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ℹ️ Polling updates cancelled.
        /// </summary>
        public static string Bot_PollingCancelled {
            get {
                return ResourceManager.GetString("Bot_PollingCancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ✅ Found {0} screens for screenshot.
        /// </summary>
        public static string Bot_ScreenshotsFound {
            get {
                return ResourceManager.GetString("Bot_ScreenshotsFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ❌ Message send error (attempt {0}): {1}.
        /// </summary>
        public static string Bot_SendMessageError {
            get {
                return ResourceManager.GetString("Bot_SendMessageError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⚠️ Too many requests, retrying in {0} ms.
        /// </summary>
        public static string Bot_SendMessageRetry {
            get {
                return ResourceManager.GetString("Bot_SendMessageRetry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ❌ Photo send error (attempt {0}): {1}.
        /// </summary>
        public static string Bot_SendPhotoError {
            get {
                return ResourceManager.GetString("Bot_SendPhotoError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ❌ System status error: {0}.
        /// </summary>
        public static string Bot_SystemStatusError {
            get {
                return ResourceManager.GetString("Bot_SystemStatusError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ❌ Token validation error: {0}.
        /// </summary>
        public static string Bot_TokenValidationError {
            get {
                return ResourceManager.GetString("Bot_TokenValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 🚫 Unauthorized access attempt from user {0}.
        /// </summary>
        public static string Bot_UnauthorizedAccess {
            get {
                return ResourceManager.GetString("Bot_UnauthorizedAccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 🔄 Restart.
        /// </summary>
        public static string Button_Restart {
            get {
                return ResourceManager.GetString("Button_Restart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⏳ Restarting....
        /// </summary>
        public static string Button_Restarting {
            get {
                return ResourceManager.GetString("Button_Restarting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ▶️ Start.
        /// </summary>
        public static string Button_Start {
            get {
                return ResourceManager.GetString("Button_Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⏳ Starting....
        /// </summary>
        public static string Button_Starting {
            get {
                return ResourceManager.GetString("Button_Starting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⏹️ Stop.
        /// </summary>
        public static string Button_Stop {
            get {
                return ResourceManager.GetString("Button_Stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⏳ Stopping....
        /// </summary>
        public static string Button_Stopping {
            get {
                return ResourceManager.GetString("Button_Stopping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 🔄 Restart.
        /// </summary>
        public static string Controls_Restart {
            get {
                return ResourceManager.GetString("Controls_Restart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⏳ Restarting....
        /// </summary>
        public static string Controls_Restarting {
            get {
                return ResourceManager.GetString("Controls_Restarting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ▶️ Start.
        /// </summary>
        public static string Controls_Start {
            get {
                return ResourceManager.GetString("Controls_Start", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⏳ Starting....
        /// </summary>
        public static string Controls_Starting {
            get {
                return ResourceManager.GetString("Controls_Starting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⏹️ Stop.
        /// </summary>
        public static string Controls_Stop {
            get {
                return ResourceManager.GetString("Controls_Stop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⏳ Stopping....
        /// </summary>
        public static string Controls_Stopping {
            get {
                return ResourceManager.GetString("Controls_Stopping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Error.
        /// </summary>
        public static string Dialog_Error {
            get {
                return ResourceManager.GetString("Dialog_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Warning.
        /// </summary>
        public static string Dialog_Warning {
            get {
                return ResourceManager.GetString("Dialog_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ❌ Auto-start error: {0}.
        /// </summary>
        public static string Error_AutoStart {
            get {
                return ResourceManager.GetString("Error_AutoStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ❌ Error changing autostart: {0}.
        /// </summary>
        public static string Error_AutoStartChange {
            get {
                return ResourceManager.GetString("Error_AutoStartChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ❌ Error updating autostart status: {0}.
        /// </summary>
        public static string Error_AutoStartStatus {
            get {
                return ResourceManager.GetString("Error_AutoStartStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ❌ Error starting bot: {0}.
        /// </summary>
        public static string Error_BotStart {
            get {
                return ResourceManager.GetString("Error_BotStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ❌ Error stopping bot: {0}.
        /// </summary>
        public static string Error_BotStop {
            get {
                return ResourceManager.GetString("Error_BotStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ❌ Error during closing: {0}.
        /// </summary>
        public static string Error_Closing {
            get {
                return ResourceManager.GetString("Error_Closing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Critical error: {0}\n\nDetails: {1}.
        /// </summary>
        public static string Error_Critical {
            get {
                return ResourceManager.GetString("Error_Critical", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ❌ Error during exit: {0}.
        /// </summary>
        public static string Error_Exit {
            get {
                return ResourceManager.GetString("Error_Exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⚠️ Error hiding window: {0}.
        /// </summary>
        public static string Error_HideWindow {
            get {
                return ResourceManager.GetString("Error_HideWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⚠️ Failed to load icon: {0}.
        /// </summary>
        public static string Error_IconLoad {
            get {
                return ResourceManager.GetString("Error_IconLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⚠️ Error changing language: {0}.
        /// </summary>
        public static string Error_LanguageChange {
            get {
                return ResourceManager.GetString("Error_LanguageChange", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⚠️ Error initializing language selector: {0}.
        /// </summary>
        public static string Error_LanguageSelector {
            get {
                return ResourceManager.GetString("Error_LanguageSelector", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ❌ Error loading settings: {0}.
        /// </summary>
        public static string Error_SettingsLoad {
            get {
                return ResourceManager.GetString("Error_SettingsLoad", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ❌ Error saving settings: {0}.
        /// </summary>
        public static string Error_SettingsSave {
            get {
                return ResourceManager.GetString("Error_SettingsSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⚠️ Error showing window: {0}.
        /// </summary>
        public static string Error_ShowWindow {
            get {
                return ResourceManager.GetString("Error_ShowWindow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Critical error starting application: {0}\n\nDetails: {1}.
        /// </summary>
        public static string Error_Startup {
            get {
                return ResourceManager.GetString("Error_Startup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Startup Error.
        /// </summary>
        public static string Error_StartupTitle {
            get {
                return ResourceManager.GetString("Error_StartupTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ❌ Error toggling token visibility: {0}.
        /// </summary>
        public static string Error_TokenToggle {
            get {
                return ResourceManager.GetString("Error_TokenToggle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⚠️ Error cleaning up tray: {0}.
        /// </summary>
        public static string Error_TrayCleanup {
            get {
                return ResourceManager.GetString("Error_TrayCleanup", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⚠️ Error initializing tray: {0}.
        /// </summary>
        public static string Error_TrayInit {
            get {
                return ResourceManager.GetString("Error_TrayInit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⚠️ Error updating tray: {0}.
        /// </summary>
        public static string Error_TrayUpdate {
            get {
                return ResourceManager.GetString("Error_TrayUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⚠️ Error updating UI after language change: {0}.
        /// </summary>
        public static string Error_UIUpdate {
            get {
                return ResourceManager.GetString("Error_UIUpdate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⚠️ Error changing window state: {0}.
        /// </summary>
        public static string Error_WindowState {
            get {
                return ResourceManager.GetString("Error_WindowState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на English.
        /// </summary>
        public static string Language_English {
            get {
                return ResourceManager.GetString("Language_English", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Language:.
        /// </summary>
        public static string Language_Label {
            get {
                return ResourceManager.GetString("Language_Label", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Russian.
        /// </summary>
        public static string Language_Russian {
            get {
                return ResourceManager.GetString("Language_Russian", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Change language.
        /// </summary>
        public static string Language_Tooltip {
            get {
                return ResourceManager.GetString("Language_Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 🔄 Exiting application....
        /// </summary>
        public static string Log_ApplicationExit {
            get {
                return ResourceManager.GetString("Log_ApplicationExit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ✅ Autostart disabled.
        /// </summary>
        public static string Log_AutoStartDisabled {
            get {
                return ResourceManager.GetString("Log_AutoStartDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ✅ Autostart enabled.
        /// </summary>
        public static string Log_AutoStartEnabled {
            get {
                return ResourceManager.GetString("Log_AutoStartEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⏳ Auto-starting bot....
        /// </summary>
        public static string Log_AutoStarting {
            get {
                return ResourceManager.GetString("Log_AutoStarting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⚠️ Auto-start skipped: missing token or users.
        /// </summary>
        public static string Log_AutoStartSkipped {
            get {
                return ResourceManager.GetString("Log_AutoStartSkipped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 🔄 Bot restarted.
        /// </summary>
        public static string Log_BotRestarted {
            get {
                return ResourceManager.GetString("Log_BotRestarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ✅ Bot started successfully.
        /// </summary>
        public static string Log_BotStarted {
            get {
                return ResourceManager.GetString("Log_BotStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ✅ Bot stopped.
        /// </summary>
        public static string Log_BotStopped {
            get {
                return ResourceManager.GetString("Log_BotStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Clear Log.
        /// </summary>
        public static string Log_Clear {
            get {
                return ResourceManager.GetString("Log_Clear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Log cleared.
        /// </summary>
        public static string Log_Cleared {
            get {
                return ResourceManager.GetString("Log_Cleared", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 📁 Current application path: {0}.
        /// </summary>
        public static string Log_CurrentPath {
            get {
                return ResourceManager.GetString("Log_CurrentPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 🌍 Language changed.
        /// </summary>
        public static string Log_LanguageChanged {
            get {
                return ResourceManager.GetString("Log_LanguageChanged", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 🌍 Localization initialized.
        /// </summary>
        public static string Log_LocalizationInitialized {
            get {
                return ResourceManager.GetString("Log_LocalizationInitialized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ✅ Settings loaded.
        /// </summary>
        public static string Log_SettingsLoaded {
            get {
                return ResourceManager.GetString("Log_SettingsLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ✅ Settings saved.
        /// </summary>
        public static string Log_SettingsSaved {
            get {
                return ResourceManager.GetString("Log_SettingsSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 📁 Settings path: {0}.
        /// </summary>
        public static string Log_SettingsSavePath {
            get {
                return ResourceManager.GetString("Log_SettingsSavePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⏳ Stopping bot....
        /// </summary>
        public static string Log_StoppingBot {
            get {
                return ResourceManager.GetString("Log_StoppingBot", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Event Log.
        /// </summary>
        public static string Log_Title {
            get {
                return ResourceManager.GetString("Log_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 🔑 Token: {0}....
        /// </summary>
        public static string Log_TokenSaved {
            get {
                return ResourceManager.GetString("Log_TokenSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 👥 Users: {0}.
        /// </summary>
        public static string Log_UsersSaved {
            get {
                return ResourceManager.GetString("Log_UsersSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Application continues running in tray. Double-click the icon to return..
        /// </summary>
        public static string Notification_ContinuesInTray {
            get {
                return ResourceManager.GetString("Notification_ContinuesInTray", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на User IDs:.
        /// </summary>
        public static string Settings_AuthorizedUsers {
            get {
                return ResourceManager.GetString("Settings_AuthorizedUsers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на IDs separated by commas.
        /// </summary>
        public static string Settings_AuthorizedUsers_Tooltip {
            get {
                return ResourceManager.GetString("Settings_AuthorizedUsers.Tooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bot Token:.
        /// </summary>
        public static string Settings_BotToken {
            get {
                return ResourceManager.GetString("Settings_BotToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Hide token.
        /// </summary>
        public static string Settings_HideToken {
            get {
                return ResourceManager.GetString("Settings_HideToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Save.
        /// </summary>
        public static string Settings_Save {
            get {
                return ResourceManager.GetString("Settings_Save", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show token.
        /// </summary>
        public static string Settings_ShowToken {
            get {
                return ResourceManager.GetString("Settings_ShowToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Bot Settings.
        /// </summary>
        public static string Settings_Title {
            get {
                return ResourceManager.GetString("Settings_Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Status: 🟢 Running.
        /// </summary>
        public static string Status_Running {
            get {
                return ResourceManager.GetString("Status_Running", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Status: 🔴 Stopped.
        /// </summary>
        public static string Status_Stopped {
            get {
                return ResourceManager.GetString("Status_Stopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Exit.
        /// </summary>
        public static string Tray_Exit {
            get {
                return ResourceManager.GetString("Tray_Exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Hide to Tray.
        /// </summary>
        public static string Tray_Hide {
            get {
                return ResourceManager.GetString("Tray_Hide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Application continues running in tray. Double-click the icon to return..
        /// </summary>
        public static string Tray_Notification_Message {
            get {
                return ResourceManager.GetString("Tray_Notification.Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на WinControlBot.
        /// </summary>
        public static string Tray_Notification_Title {
            get {
                return ResourceManager.GetString("Tray_Notification.Title", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на WinControlBot - Running.
        /// </summary>
        public static string Tray_Running {
            get {
                return ResourceManager.GetString("Tray_Running", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show Window.
        /// </summary>
        public static string Tray_Show {
            get {
                return ResourceManager.GetString("Tray_Show", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на WinControlBot - Stopped.
        /// </summary>
        public static string Tray_Stopped {
            get {
                return ResourceManager.GetString("Tray_Stopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Exit.
        /// </summary>
        public static string TrayMenu_Exit {
            get {
                return ResourceManager.GetString("TrayMenu_Exit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Hide to Tray.
        /// </summary>
        public static string TrayMenu_Hide {
            get {
                return ResourceManager.GetString("TrayMenu_Hide", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Running.
        /// </summary>
        public static string TrayMenu_Running {
            get {
                return ResourceManager.GetString("TrayMenu_Running", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Show Window.
        /// </summary>
        public static string TrayMenu_Show {
            get {
                return ResourceManager.GetString("TrayMenu_Show", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Stopped.
        /// </summary>
        public static string TrayMenu_Stopped {
            get {
                return ResourceManager.GetString("TrayMenu_Stopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please enter bot token!.
        /// </summary>
        public static string Validation_EmptyToken {
            get {
                return ResourceManager.GetString("Validation_EmptyToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⚠️ Token is empty, save cancelled.
        /// </summary>
        public static string Validation_EmptyTokenWarning {
            get {
                return ResourceManager.GetString("Validation_EmptyTokenWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please specify at least one authorized user!.
        /// </summary>
        public static string Validation_EmptyUsers {
            get {
                return ResourceManager.GetString("Validation_EmptyUsers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please enter bot token!.
        /// </summary>
        public static string Validation_MissingToken {
            get {
                return ResourceManager.GetString("Validation_MissingToken", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Please specify at least one authorized user!.
        /// </summary>
        public static string Validation_MissingUsers {
            get {
                return ResourceManager.GetString("Validation_MissingUsers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⚠️ Auto-start skipped: missing token or users.
        /// </summary>
        public static string Window_AutoStartSkipped {
            get {
                return ResourceManager.GetString("Window_AutoStartSkipped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ✅ Bot stopped.
        /// </summary>
        public static string Window_BotStopped {
            get {
                return ResourceManager.GetString("Window_BotStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 📁 Current application path: {0}.
        /// </summary>
        public static string Window_CurrentPath {
            get {
                return ResourceManager.GetString("Window_CurrentPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ⚠️ Token is empty, save cancelled.
        /// </summary>
        public static string Window_EmptyTokenSave {
            get {
                return ResourceManager.GetString("Window_EmptyTokenSave", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ✅ Settings loaded.
        /// </summary>
        public static string Window_SettingsLoaded {
            get {
                return ResourceManager.GetString("Window_SettingsLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 📁 Settings path: {0}.
        /// </summary>
        public static string Window_SettingsPath {
            get {
                return ResourceManager.GetString("Window_SettingsPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на ✅ Settings saved.
        /// </summary>
        public static string Window_SettingsSaved {
            get {
                return ResourceManager.GetString("Window_SettingsSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 🔑 Token: {0}....
        /// </summary>
        public static string Window_TokenSaved {
            get {
                return ResourceManager.GetString("Window_TokenSaved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на 👥 Users: {0}.
        /// </summary>
        public static string Window_UserCount {
            get {
                return ResourceManager.GetString("Window_UserCount", resourceCulture);
            }
        }
    }
}
